using System.Drawing;

namespace AdventOfCode2022;

public class Day9
{
    public static void Part1(string input)
    {
        Console.WriteLine();
        Console.WriteLine("Day9 Part1");

        var inputs = input.Split(Environment.NewLine).ToArray();

        var head = new MutablePoint();
        var tail = new MutablePoint();
        var tailHistory = new HashSet<Point> {new(tail.X, tail.Y)};
        foreach (var line in inputs)
        {
            var xDir = 0;
            var yDir = 0;
            var values = line.Split(" ");
            switch (values[0])
            {
                case "L":
                    xDir = -1;
                    break;
                case "R":
                    xDir = 1;
                    break;
                case "U":
                    yDir = 1;
                    break;
                case "D":
                    yDir = -1;
                    break;
            }

            head.X += xDir * int.Parse(values[1]);
            head.Y += yDir * int.Parse(values[1]);

            while (!IsTouching(head, tail))
            {
                tail.X += Math.Clamp(head.X - tail.X, -1, 1);
                tail.Y += Math.Clamp(head.Y - tail.Y, -1, 1);
                tailHistory.Add(new Point(tail.X, tail.Y));
            }
        }

        Console.WriteLine(tailHistory.Count);
    }

    private static bool IsTouching(MutablePoint head, MutablePoint tail)
    {
        return Math.Sqrt(Math.Pow(head.X - tail.X, 2) + Math.Pow(head.Y - tail.Y, 2)) < 2;
    }

    public static void Part2(string input)
    {
        Console.WriteLine();
        Console.WriteLine("Day9 Part2");

        var inputs = input.Split(Environment.NewLine).ToArray();

        var rope = new List<MutablePoint>();
        for (var i = 0; i < 10; i++)
        {
            rope.Add(new MutablePoint());
        }

        var tailHistory = new HashSet<Point> {new(rope.Last().X, rope.Last().Y)};
        foreach (var line in inputs)
        {
            var xDir = 0;
            var yDir = 0;
            var values = line.Split(" ");
            switch (values[0])
            {
                case "L":
                    xDir = -1;
                    break;
                case "R":
                    xDir = 1;
                    break;
                case "U":
                    yDir = 1;
                    break;
                case "D":
                    yDir = -1;
                    break;
            }

            for (var j = 0; j < int.Parse(values[1]); j++)
            {
                rope[0].X += xDir;
                rope[0].Y += yDir;

                for (var i = 1; i < rope.Count; i++)
                    while (!IsTouching(rope[i - 1], rope[i]))
                    {
                        rope[i].X += Math.Clamp(rope[i - 1].X - rope[i].X, -1, 1);
                        rope[i].Y += Math.Clamp(rope[i - 1].Y - rope[i].Y, -1, 1);
                        if (i == rope.Count - 1)
                            tailHistory.Add(new Point(rope[i].X, rope[i].Y));
                    }
                //PrintRope(rope, 6);
            }
        }

        for (var y = 60; y > -60; y--)
        {
            for (var x = -60; x < 60; x++)
            {
                var display = ".";
                if (tailHistory.Any(t => t.X == x && t.Y == y))
                {
                    display = "#";
                }

                Console.Write(display);
            }

            Console.WriteLine();
        }

        Console.WriteLine();

        Console.WriteLine(tailHistory.Count);
    }

    private static void PrintRope(IReadOnlyList<MutablePoint> rope, int boardSize = 18)
    {
        for (var y = boardSize; y > -boardSize; y--)
        {
            for (var x = -boardSize; x < boardSize; x++)
            {
                var display = ".";
                for (var i = 0; i < rope.Count; i++)
                {
                    if (rope[i].X != x || rope[i].Y != y) continue;
                    display = i.ToString();
                    break;
                }

                Console.Write(display);
            }

            Console.WriteLine();
        }

        Console.WriteLine();
    }

    public class MutablePoint
    {
        public int X { get; set; }

        public int Y { get; set; }

        public MutablePoint()
        {
        }

        public MutablePoint(int x, int y)
        {
            this.X = x;
            this.Y = y;
        }
    }

    public static string TestInput = @"R 4
U 4
L 3
D 1
R 4
D 1
L 5
R 2";

    public static string TestInput2 = @"R 5
U 8
L 8
D 3
R 17
D 10
L 25
U 20";

    public static string Input = @"D 1
L 1
U 1
R 2
L 1
U 1
L 1
R 2
U 1
D 2
L 2
D 1
L 1
R 1
L 1
U 1
D 1
R 2
L 2
U 1
R 2
L 1
R 1
U 2
D 1
R 2
L 1
U 2
D 1
R 2
L 1
D 1
R 1
U 1
R 1
L 1
U 1
L 1
D 2
U 1
R 1
D 2
L 1
U 1
L 1
U 2
R 1
D 2
U 1
R 1
L 2
D 1
L 2
R 1
U 2
L 1
R 1
L 2
U 1
R 1
L 1
U 2
D 1
L 1
U 1
R 2
U 1
D 1
L 1
R 2
L 1
D 1
L 2
R 1
L 2
U 2
D 2
U 1
D 2
R 2
L 2
R 2
D 2
R 1
L 1
U 1
L 2
D 2
L 1
U 1
R 2
D 2
L 1
U 2
L 1
U 2
D 1
R 2
D 1
U 2
D 2
L 2
U 1
L 1
R 2
D 2
L 1
U 1
R 1
L 1
U 2
D 1
L 1
R 1
D 1
L 2
D 1
U 1
D 3
L 1
U 1
D 2
U 2
D 2
L 1
R 1
L 3
R 2
U 2
R 1
U 3
L 2
R 3
U 1
R 2
D 2
U 3
R 3
D 2
L 1
R 2
L 3
R 2
D 1
R 1
D 2
R 1
L 1
U 3
D 1
U 2
D 3
R 2
U 2
L 1
D 1
U 1
D 1
R 1
U 2
R 1
L 2
U 1
D 1
L 2
R 2
D 1
R 3
L 2
R 1
U 1
R 2
U 1
R 1
L 3
R 3
D 3
L 1
R 3
D 2
L 2
R 3
D 2
R 2
L 2
U 3
L 3
U 3
R 1
D 2
R 1
D 3
L 3
D 1
U 1
D 3
R 1
U 2
L 3
U 1
L 3
R 1
U 1
R 1
D 1
R 1
L 2
D 1
R 3
L 1
D 1
U 3
D 3
L 1
U 1
D 2
U 3
R 2
U 2
L 1
D 3
U 1
L 1
R 1
U 3
D 4
R 3
U 2
R 2
U 3
L 3
U 4
L 3
U 1
D 2
L 1
U 4
R 3
L 1
R 1
L 4
R 4
L 2
U 3
D 4
U 2
R 1
D 4
R 4
L 1
R 2
U 3
L 2
D 3
U 1
L 3
U 3
L 4
D 3
R 2
D 1
L 4
D 4
L 2
D 1
L 2
R 4
U 4
L 3
R 1
D 1
R 1
U 2
L 4
U 3
D 2
U 3
D 3
U 4
L 4
U 3
D 2
R 2
U 3
R 2
L 4
D 4
R 2
D 1
L 3
U 4
D 4
R 1
U 4
D 4
U 4
R 1
U 4
R 2
D 4
U 1
R 4
L 2
R 3
U 3
D 4
R 1
D 2
U 2
R 1
U 4
D 4
L 4
U 2
R 1
U 1
D 1
L 2
D 2
U 1
D 2
U 3
D 2
L 3
U 3
D 3
L 3
R 3
L 2
U 4
L 4
U 4
L 1
D 1
R 4
D 2
L 1
R 1
L 4
D 4
U 1
D 2
U 5
R 2
U 3
D 2
L 2
R 1
U 1
R 4
D 4
R 2
L 1
D 3
U 3
L 2
D 4
U 4
D 4
R 1
U 1
D 3
R 1
D 5
U 4
R 4
D 5
U 5
L 5
D 3
R 2
D 4
L 2
R 5
D 5
R 4
D 1
L 1
R 5
D 1
U 1
L 4
R 5
D 2
L 1
U 1
R 5
D 4
L 1
R 1
D 5
L 2
D 4
R 3
L 3
U 2
D 1
R 5
L 3
U 1
D 3
U 3
D 1
L 2
R 3
U 3
D 5
L 1
D 5
R 2
U 2
D 5
L 4
R 4
L 2
R 4
D 4
U 3
D 1
U 5
L 5
U 4
D 4
U 4
R 2
D 2
L 2
U 5
L 5
R 1
L 4
D 1
R 5
D 5
L 3
U 4
R 2
U 3
L 1
U 1
D 2
L 3
D 2
L 1
U 4
L 1
D 6
L 5
U 4
R 2
L 6
R 3
L 4
U 1
D 5
R 4
L 5
R 5
U 5
R 6
D 2
U 2
D 3
U 5
R 6
U 5
L 3
R 1
L 6
D 3
L 6
D 6
R 6
D 3
R 6
D 1
U 5
R 1
U 2
R 6
U 2
L 1
R 4
D 6
L 4
R 5
D 1
R 5
U 1
L 3
U 3
L 2
D 2
R 5
L 1
R 5
L 4
R 6
U 3
R 6
U 5
R 4
D 2
L 4
U 2
R 6
L 3
U 2
L 6
U 4
R 6
L 6
D 5
U 5
L 1
R 4
L 1
D 4
R 4
L 6
D 3
U 2
D 6
R 4
D 6
U 3
L 6
U 6
R 3
L 2
R 1
D 5
R 2
L 1
U 1
D 1
L 3
D 5
R 5
L 3
U 2
R 1
U 4
R 2
D 6
R 2
U 4
R 1
U 3
L 5
D 5
L 1
R 4
L 5
D 5
R 2
U 7
L 4
U 6
R 5
U 7
D 1
R 4
D 3
R 5
U 5
D 6
L 4
U 2
D 2
R 6
L 1
R 4
D 1
U 2
L 2
R 2
U 2
R 6
D 2
U 5
R 3
U 3
D 6
L 3
R 4
U 4
R 2
D 3
U 1
L 3
U 5
D 7
U 4
R 5
D 4
R 6
U 1
D 5
U 3
R 6
U 4
R 6
L 5
R 6
L 4
R 2
U 7
L 5
R 5
D 4
L 7
D 7
U 1
L 2
D 4
R 3
U 4
R 3
U 6
D 4
L 2
R 2
U 4
D 6
U 4
D 1
R 5
L 7
D 4
U 1
D 3
R 7
D 7
U 4
R 4
D 6
U 4
R 7
D 3
L 4
U 7
R 5
D 6
U 1
L 4
U 6
D 5
R 3
U 2
D 7
U 7
D 7
U 4
D 7
U 4
D 2
U 7
R 3
U 7
R 7
D 3
L 3
R 5
D 3
R 5
U 8
L 6
R 7
L 4
R 8
U 6
L 2
U 8
R 3
U 5
R 2
D 5
R 7
D 4
R 3
L 5
R 4
D 8
U 4
L 4
U 2
L 4
R 8
D 2
U 5
D 3
R 1
U 5
L 2
R 2
U 6
L 3
R 8
L 3
U 3
R 5
U 1
L 3
R 6
L 4
R 5
D 5
R 7
L 3
R 1
D 8
R 1
U 3
L 1
U 6
D 4
R 8
U 1
D 6
L 5
R 5
U 4
D 8
R 8
L 1
R 3
U 5
L 4
U 2
R 6
U 5
R 6
U 7
L 1
R 1
L 8
R 7
U 8
R 6
U 1
L 1
R 3
D 4
R 6
L 7
D 4
U 7
R 7
U 6
L 6
D 4
R 5
U 1
D 8
R 2
D 1
R 6
L 3
D 7
R 5
L 4
D 4
U 3
D 3
R 3
U 3
L 8
D 1
L 7
D 7
R 2
L 1
U 2
D 8
R 1
U 7
L 8
U 3
R 5
U 7
D 7
U 3
L 5
U 1
D 3
U 6
R 9
L 7
U 8
L 6
R 4
L 1
R 6
U 4
L 4
R 4
D 6
L 9
D 2
L 2
R 5
L 8
U 2
R 5
U 4
L 2
D 6
U 8
D 8
U 4
R 1
D 9
U 5
D 8
R 1
U 7
D 4
L 4
R 3
L 2
D 4
L 9
D 1
U 2
L 2
R 1
D 5
U 8
R 8
U 9
L 8
D 4
U 6
L 1
D 8
L 6
U 3
R 2
L 7
D 6
U 7
D 7
L 8
R 2
U 2
L 6
D 6
U 4
R 3
L 5
D 4
R 3
D 6
L 5
R 7
U 3
L 6
U 6
R 8
D 5
U 7
R 4
U 2
D 6
R 9
U 3
D 3
U 1
L 4
R 8
D 8
L 2
D 3
L 9
U 6
R 4
L 3
R 8
L 3
D 9
L 2
D 3
U 1
D 3
U 2
L 1
U 9
L 8
D 1
L 9
U 1
L 2
D 9
R 10
D 8
R 9
D 3
U 9
D 5
R 9
U 5
D 3
U 4
D 10
L 3
R 1
D 4
U 1
L 4
U 4
D 7
L 8
D 8
L 3
R 3
L 9
R 3
D 4
R 9
L 1
D 4
U 5
L 7
D 9
R 4
U 3
L 4
D 2
L 9
U 3
D 10
L 4
D 7
R 7
L 6
U 2
D 9
U 5
R 7
L 7
U 4
L 7
R 1
L 10
R 9
U 1
L 9
U 3
L 6
U 9
R 8
L 2
R 1
U 9
R 7
D 1
L 1
R 5
U 7
L 7
D 6
R 2
U 2
D 1
L 10
U 9
D 1
L 5
R 9
D 2
L 1
R 6
D 9
U 3
L 9
R 7
L 6
U 2
R 6
L 2
D 6
U 8
D 7
L 1
R 2
U 7
R 5
U 2
L 10
D 2
L 4
R 8
L 5
D 4
L 4
R 3
U 3
D 10
R 8
U 8
D 10
U 4
R 2
L 11
U 10
R 2
U 2
L 11
R 11
D 3
U 11
L 11
R 1
L 9
D 10
R 8
L 2
D 1
L 1
D 9
R 6
D 10
U 4
L 7
U 5
L 3
U 1
D 3
U 1
L 10
R 3
D 11
U 11
L 9
R 5
L 7
D 1
R 11
U 10
D 6
L 8
R 2
L 7
U 7
L 6
D 11
R 1
L 11
D 9
U 6
D 2
L 2
U 1
L 10
D 5
U 8
D 3
R 6
U 11
R 3
D 5
U 7
L 3
U 4
D 5
L 8
D 10
R 7
D 4
U 10
L 7
R 5
L 3
R 6
U 5
D 9
R 8
L 2
U 6
R 5
D 3
U 11
R 3
U 3
D 1
L 11
D 10
R 1
U 11
R 6
U 1
L 8
D 10
U 5
L 4
R 5
U 4
L 5
D 3
U 9
L 9
D 3
R 6
D 8
U 8
R 3
L 8
R 3
U 2
D 11
R 7
L 2
U 1
L 8
R 6
L 1
D 6
U 9
L 9
D 2
L 7
D 7
U 8
D 4
R 11
D 2
U 7
D 10
R 8
L 9
U 9
R 11
L 9
D 9
U 1
R 2
D 4
U 2
D 8
R 2
D 3
R 8
L 5
R 5
U 7
D 3
R 12
L 1
U 8
L 9
R 1
U 8
L 1
U 8
L 4
D 3
R 9
L 8
U 11
D 3
L 12
D 1
U 11
R 8
D 1
R 4
D 3
U 12
R 6
U 12
R 6
U 5
D 10
L 9
R 1
U 12
D 5
L 1
R 6
U 9
L 9
D 3
R 9
D 11
U 1
L 3
U 10
D 4
L 9
R 3
L 8
D 2
R 2
D 2
R 5
D 8
R 7
L 9
D 12
L 5
U 8
L 5
R 5
U 3
D 7
R 7
U 8
R 1
D 6
R 12
D 9
R 9
L 5
R 11
L 10
R 9
L 2
R 4
D 1
R 3
U 11
L 10
U 6
D 11
U 13
D 6
L 1
D 7
R 13
U 4
D 1
R 12
D 11
L 7
U 11
D 9
U 10
R 1
D 7
U 11
R 11
U 8
L 6
D 3
L 3
D 9
R 3
D 1
U 11
D 1
R 6
L 2
R 8
U 10
L 7
D 8
U 12
R 12
U 8
L 1
U 8
R 13
L 9
D 1
L 8
R 6
L 10
R 8
D 11
R 3
U 4
L 2
U 4
D 12
U 1
L 12
R 9
L 11
R 2
U 12
R 5
L 12
D 4
L 7
U 10
L 4
R 11
D 6
R 6
L 3
D 3
U 9
D 6
L 8
R 1
U 12
R 12
U 12
D 1
R 3
L 11
D 7
U 7
R 12
D 1
R 10
D 10
U 5
D 8
R 11
L 13
U 5
D 10
L 4
R 13
L 1
U 6
L 10
D 7
L 3
R 4
U 13
D 4
R 12
U 6
D 7
R 10
U 3
R 1
L 11
R 3
L 3
D 8
R 6
U 7
D 13
U 13
L 12
R 14
D 7
U 2
R 4
L 14
U 4
L 10
R 13
U 9
D 2
U 1
L 9
D 13
R 4
U 10
L 8
D 9
U 9
D 6
U 13
R 2
U 13
L 5
U 5
D 14
R 9
L 7
D 8
R 12
L 7
U 6
D 4
L 14
U 11
D 4
L 12
U 7
L 3
U 12
R 13
U 6
R 6
L 8
R 5
U 4
D 5
R 9
U 7
D 9
U 4
R 2
D 5
L 4
D 1
R 13
D 11
U 12
L 7
R 12
U 8
L 3
U 13
D 5
R 12
U 6
D 7
U 1
D 11
L 4
R 14
U 12
L 3
D 13
U 2
R 2
L 6
D 8
U 6
D 14
U 1
R 1
D 1
U 13
L 6
U 11
D 9
L 1
D 7
U 8
D 6
U 7
D 11
R 5
U 11
D 13
L 5
D 14
L 4
U 1
L 8
R 9
D 11
U 2
L 9
D 13
L 5
D 1
L 5
R 11
U 15
D 8
U 9
D 3
L 5
R 12
U 11
L 5
D 2
L 1
U 14
R 13
D 9
L 2
U 8
D 5
R 2
D 13
L 10
U 1
L 5
D 10
U 13
L 15
U 2
R 3
D 15
R 15
L 12
R 14
L 7
U 3
R 12
L 5
R 4
L 8
D 11
R 2
L 13
D 15
U 9
R 10
U 6
L 1
D 11
L 14
D 5
R 11
L 5
U 13
R 9
L 2
D 2
U 7
L 11
D 8
L 11
R 3
D 2
L 13
D 15
R 2
D 13
L 7
U 8
D 8
U 9
R 1
D 7
L 5
R 1
D 9
R 3
L 5
D 10
R 6
D 11
U 15
L 15
U 12
D 7
L 11
D 13
L 11
D 13
L 1
D 15
L 3
R 1
U 2
L 6
R 7
D 5
L 6
R 12
L 3
U 1
D 1
L 10
R 15
L 9
U 1
L 12
U 14
L 3
U 10
L 5
U 5
L 13
R 15
L 1
D 11
U 4
R 7
D 13
U 3
D 12
R 14
U 5
R 12
D 5
U 6
R 3
U 2
D 12
R 3
L 3
D 10
U 6
L 12
U 8
L 1
U 13
L 2
R 3
L 9
R 10
U 10
D 2
U 15
D 3
U 13
L 13
R 12
L 12
U 7
L 14
D 15
U 14
D 14
L 14
U 5
R 2
D 12
U 14
L 2
D 12
L 8
U 7
L 6
D 6
L 13
U 2
L 10
R 11
U 4
D 6
R 15
U 7
R 10
U 4
L 7
D 13
U 8
L 13
U 3
L 4
D 11
U 14
R 8
L 1
R 16
L 1
D 8
R 6
D 12
U 4
L 9
D 9
U 10
R 8
L 10
D 14
R 11
L 6
U 14
R 9
U 13
D 9
U 3
R 14
U 16
D 16
R 2
L 12
R 5
L 1
U 4
D 8
U 15
L 1
U 5
D 4
L 3
D 7
R 8
L 6
U 3
L 10
R 9
D 2
R 7
L 15
R 6
D 8
U 17
D 9
U 9
L 8
U 7
D 3
U 11
L 2
R 17
U 13
D 4
R 9
L 9
U 4
D 12
R 16
L 12
U 17
R 8
D 7
R 6
D 8
L 7
D 4
U 15
D 11
R 15
D 8
R 6
U 4
D 11
U 4
R 17
D 7
L 12
D 3
U 10
D 11
L 5
U 7
L 8
D 14
U 9
D 9
U 5
R 4
D 1
U 16
D 5
R 10
L 9
D 15
R 16
U 7
R 16
D 8
U 3
D 9
L 13
D 16
L 10
U 12
R 13
L 9
U 5
D 2
U 12
L 17
U 7
D 8
R 13
D 17
L 8
U 9
R 15
D 17
U 8
L 5
R 2
U 3
R 14
L 7
R 17
D 1
L 7
R 12
D 11
U 4
L 17
U 5
R 14
D 13
U 16
L 16
R 14
L 17
U 9
L 5
U 11
L 17
R 11
D 14
R 15
D 15
L 1
D 7
U 14
R 7
U 8
L 2
U 2
D 16
L 7
U 11
R 9
L 14
R 8
U 17
D 16
R 11
U 1
D 11
R 3
U 9
D 9
R 2
U 15
L 13
U 2
R 1
L 8
D 2
L 16
U 5
R 1
L 11
D 17
L 17
U 1
L 8
U 11
R 12
D 10
U 11
L 13
R 12
L 6
D 2
L 17
D 9
U 12
L 5
U 1
R 1
D 5
U 5
L 4
D 7
R 13
D 3
U 8
D 1
R 7
L 15
D 15
R 11
U 18
L 3
D 16
U 17
D 13
R 9
L 14
R 14
L 8
U 16
R 13
D 7
R 15
U 16
R 3
U 9
R 8
L 2
D 3
R 10
D 17
U 6
L 10
U 15
L 7
D 3
R 2
D 1
R 18
D 6
U 9
R 13
D 14
U 13
L 13
D 17
R 16
L 6
U 8
L 1
R 7
L 7
U 13
R 3
D 4
L 16
U 15
L 5
U 3
D 3
U 12
L 5
D 14
R 6
D 3
R 4
L 18
D 16
U 12
R 14
U 9
R 5
U 19
L 17
R 8
U 15
D 9
L 8
D 8
U 6
L 4
U 19
D 17
U 8
R 19
L 8
U 8
L 16
R 6
L 5
U 7
D 6
U 10
L 11
D 11
U 7
L 6
U 13
D 18
U 17
R 11
U 19
D 5
L 3
U 6
D 3
U 9
R 8
L 7
R 16
L 15
D 12
U 10
L 16
R 17
U 12
L 1
D 5
L 9
U 12
L 2
D 18
L 1
R 1
L 2
R 2
L 9
U 18
R 8
D 8
R 4
L 16
U 6
R 11
D 13
R 1
D 14
L 6
D 14
R 8
L 5
D 6
L 14
U 11
L 5
R 8
D 11
L 6
U 17
R 15
L 13
U 16
D 2
R 8
D 5
L 8
D 7
R 5
U 10
L 19
R 7
D 16
R 1
L 12
D 8
L 8
R 10
L 10
U 1
R 10
U 15";
}